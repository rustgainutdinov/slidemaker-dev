[{"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/index.tsx":"1","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/App.tsx":"2","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/index.ts":"3","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/index.tsx":"4","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createControlElements.tsx":"5","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/editor/index.ts":"6","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/index.tsx":"7","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createCircle.tsx":"8","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createRectangle.tsx":"9","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createTextContainer.tsx":"10","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getDefaultEditor.ts":"11","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isRectangle.ts":"12","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isCircle.ts":"13","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isTextContainer.ts":"14","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentContent.ts":"15","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createCircle.ts":"16","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createRectangle.ts":"17","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createTextContainer.ts":"18","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/circle.tsx":"19","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/rectangles.tsx":"20","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/textContainers.tsx":"21","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultTextContainer.ts":"22","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/ContentType.ts":"23","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/BorderType.ts":"24","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateControlElements.tsx":"25","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateCircle.tsx":"26","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateCircle.ts":"27","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/index.tsx":"28","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createSlide.ts":"29","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlide.ts":"30","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/index.tsx":"31","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateRectangle.tsx":"32","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateTextContainer.tsx":"33","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateRectangle.ts":"34","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateTextContainer.ts":"35","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlideSvg.ts":"36","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateContent.ts":"37","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultCircle.ts":"38","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultRectangle.ts":"39","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateEditorContent.ts":"40","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateSlidesListContent.ts":"41","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultPresentation.ts":"42","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultSlide.ts":"43","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/generateUuid.ts":"44","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/getIteratedCurrSlideContentList.ts":"45"},{"size":141,"mtime":1609588614454,"results":"46","hashOfConfig":"47"},{"size":505,"mtime":1609590181434,"results":"48","hashOfConfig":"47"},{"size":200,"mtime":1609578811686,"results":"49","hashOfConfig":"47"},{"size":3623,"mtime":1609834271043,"results":"50","hashOfConfig":"47"},{"size":435,"mtime":1609787941717,"results":"51","hashOfConfig":"47"},{"size":2092,"mtime":1609834271038,"results":"52","hashOfConfig":"47"},{"size":2008,"mtime":1609966129353,"results":"53","hashOfConfig":"47"},{"size":711,"mtime":1609795903585,"results":"54","hashOfConfig":"47"},{"size":735,"mtime":1609796107040,"results":"55","hashOfConfig":"47"},{"size":755,"mtime":1609795903584,"results":"56","hashOfConfig":"47"},{"size":364,"mtime":1609963931794,"results":"57","hashOfConfig":"47"},{"size":232,"mtime":1609578811649,"results":"58","hashOfConfig":"47"},{"size":215,"mtime":1609578811583,"results":"59","hashOfConfig":"47"},{"size":246,"mtime":1609578811610,"results":"60","hashOfConfig":"47"},{"size":452,"mtime":1609963931609,"results":"61","hashOfConfig":"47"},{"size":433,"mtime":1609963931772,"results":"62","hashOfConfig":"47"},{"size":448,"mtime":1609963931917,"results":"63","hashOfConfig":"47"},{"size":469,"mtime":1609963931643,"results":"64","hashOfConfig":"47"},{"size":460,"mtime":1609965760326,"results":"65","hashOfConfig":"47"},{"size":564,"mtime":1609965760341,"results":"66","hashOfConfig":"47"},{"size":467,"mtime":1609965760335,"results":"67","hashOfConfig":"47"},{"size":448,"mtime":1609963931707,"results":"68","hashOfConfig":"47"},{"size":111,"mtime":1609578811568,"results":"69","hashOfConfig":"47"},{"size":61,"mtime":1609578811589,"results":"70","hashOfConfig":"47"},{"size":1508,"mtime":1609963931901,"results":"71","hashOfConfig":"47"},{"size":4283,"mtime":1609831432754,"results":"72","hashOfConfig":"47"},{"size":428,"mtime":1609963931897,"results":"73","hashOfConfig":"47"},{"size":1692,"mtime":1609964114273,"results":"74","hashOfConfig":"47"},{"size":811,"mtime":1609964246748,"results":"75","hashOfConfig":"47"},{"size":283,"mtime":1609963931614,"results":"76","hashOfConfig":"47"},{"size":515,"mtime":1609920264409,"results":"77","hashOfConfig":"47"},{"size":5088,"mtime":1609831432754,"results":"78","hashOfConfig":"47"},{"size":4087,"mtime":1609831432755,"results":"79","hashOfConfig":"47"},{"size":448,"mtime":1609963931755,"results":"80","hashOfConfig":"47"},{"size":476,"mtime":1609963931777,"results":"81","hashOfConfig":"47"},{"size":331,"mtime":1609963931649,"results":"82","hashOfConfig":"47"},{"size":608,"mtime":1609963931632,"results":"83","hashOfConfig":"47"},{"size":549,"mtime":1609963931606,"results":"84","hashOfConfig":"47"},{"size":626,"mtime":1609963931660,"results":"85","hashOfConfig":"47"},{"size":616,"mtime":1609963931667,"results":"86","hashOfConfig":"47"},{"size":642,"mtime":1609963931921,"results":"87","hashOfConfig":"47"},{"size":274,"mtime":1609961461695,"results":"88","hashOfConfig":"47"},{"size":258,"mtime":1609963931691,"results":"89","hashOfConfig":"47"},{"size":254,"mtime":1609786909917,"results":"90","hashOfConfig":"47"},{"size":449,"mtime":1609966129349,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"nvgrty",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/index.tsx",[],["188","189"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/App.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/index.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/index.tsx",["190","191","192","193","194"],"import React from \"react\";\nimport {Contents} from \"./contents\";\nimport {Control} from \"./control\";\nimport {UpdateControlElements} from \"./control/updateControlElements\";\nimport {Previews} from \"./previews\";\nimport {useDispatch} from \"react-redux\";\nimport {undoState} from \"../../store/Reducer/editor\";\n\nexport const Editor = () => {\n    const dispatch = useDispatch();\n    const undoAction = () => dispatch(undoState());\n    return (\n        <section>\n            <section>\n                <div className=\"main_menu\">\n                    <div className=\"logo_box\">\n                        <p className=\"logo\">Y</p>\n                    </div>\n                    <div className=\"tools_panel\">\n                        <h1 className=\"title\">Самая лучшая презентация</h1>\n                        <div className=\"tools\">\n                            <li><a href=\"#\" className=\"tools_button\">Файл</a></li>\n                            <li><a href=\"#\" className=\"tools_button\" onClick={undoAction}>UNDO</a></li>\n                            <li><a href=\"#\" className=\"tools_button\">REDO</a></li>\n                            <li><a href=\"#\" className=\"tools_button\">Вставка</a>\n                                <ul className=\"dropdown\">\n                                    <Control/>\n                                </ul>\n                            </li>\n                            <li>\n                                <a href=\"#edit_params\" className=\"tools_button\">Изменить</a>\n                                <UpdateControlElements/>\n                            </li>\n                        </div>\n                    </div>\n                    {/* <div className=\"edit_panel\">\n                            <h2 className=\"edit_title\">Параметры элементов</h2>\n                            <div className=\"edit_tools_box\">\n                                <div className=\"edit_tools\">\n                                    <li>\n                                        <a href=\"#edit_params\" className=\"edit_button\">Редактировать элемент</a>\n                                        <UpdateControlElements/>\n                                    </li>\n                                     <li>\n                                        <a href=\"#edit_params_box_color\" className=\"edit_button\">Цвет</a>\n                                        <div id=\"edit_params_box_color\">\n                                            <div id=\"popup_color\">\n                                                <div className=\"params_field\">\n                                                    <h3 className=\"param_name\">Изменить цвет</h3>\n                                                    <input type=\"text\" className=\"param_input_label\"/>\n                                                </div>\n                                                <a href=\"#\" className=\"close\">Применить</a>\n                                            </div>\n                                        </div>\n                                    </li> \n                                </div>\n                            </div>\n                        </div> */}\n                </div>\n            </section>\n            <section>\n                <div className=\"working_space\">\n                    <Previews/>\n                    <div className=\"slide_view\">\n                        <Contents/>\n                    </div>\n                </div>\n            </section>\n        </section>\n    );\n};\n","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createControlElements.tsx",[],["195","196"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/editor/index.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/index.tsx",["197"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createCircle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createRectangle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createTextContainer.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getDefaultEditor.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/circle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/rectangles.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/textContainers.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/ContentType.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/BorderType.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateControlElements.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateCircle.tsx",["198"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport updateCircle from \"../../../methods/updateContent/updateCircle\";\nimport Circle from \"../../../model/slide/content/shape/Circle\";\n\ntype updateCircleProps = {\n    presentEditor: Editor, currentCircle: Circle\n}\n\nexport const UpdateCircle = ({ presentEditor, currentCircle }: updateCircleProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingCircle = (circle: Circle) => dispatch(addState(updateCircle(presentEditor, circle)));\n\n    const handleRadiusChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        radius: +event.target.value\n    });\n    const handleBorderWidthChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            width: +event.target.value\n        }\n    });\n    const handleBorderColorChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            color: event.target.value\n        }\n    });\n    const handleBorderTypeChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            type: event.target.value\n        }\n    });\n    const handleBackgroundChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        background: event.target.value\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        position: {\n            ...currentCircle.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        position: {\n            ...currentCircle.position,\n            y: +event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_circle\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Радиус</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRadiusChange} value={currentCircle.radius} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderWidthChange} value={currentCircle.border.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderColorChange} value={currentCircle.border.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Тип обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderTypeChange} value={currentCircle.border.type} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Фон</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBackgroundChange} value={currentCircle.background} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentCircle.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentCircle.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/index.tsx",["199","200"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/index.tsx",["201","202","203"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateRectangle.tsx",["204"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport Rectangle from \"../../../model/slide/content/shape/Rectangle\";\nimport updateRectangle from \"../../../methods/updateContent/updateRectangle\";\n\ntype updateRectangleProps = {\n    presentEditor: Editor, currentRectangle: Rectangle\n}\n\nexport const UpdateRectangle = ({ presentEditor, currentRectangle }: updateRectangleProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingRectangle = (rectangle: Rectangle) => dispatch(addState(updateRectangle(presentEditor, rectangle)));\n\n    const handleBackgroundChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        background: event.target.value\n    });\n    const handleBorderWidthChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            width: +event.target.value\n        }\n    });\n    const handleBorderColorChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            color: event.target.value\n        }\n    });\n    const handleBorderTypeChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            type: event.target.value\n        }\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        position: {\n            ...currentRectangle.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        position: {\n            ...currentRectangle.position,\n            y: +event.target.value\n        }\n    });\n    const handleRectangleSizeHeightChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        rectangleSize: {\n            ...currentRectangle.rectangleSize,\n            height: +event.target.value\n        }\n    });\n    const handleRectangleSizeWidthChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        rectangleSize: {\n            ...currentRectangle.rectangleSize,\n            width: +event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_rect\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRectangleSizeWidthChange} value={currentRectangle.rectangleSize.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Высота</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRectangleSizeHeightChange} value={currentRectangle.rectangleSize.height} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Фон</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBackgroundChange} value={currentRectangle.background} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderWidthChange} value={currentRectangle.border.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderColorChange} value={currentRectangle.border.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Тип обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderTypeChange} value={currentRectangle.border.type} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentRectangle.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentRectangle.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateTextContainer.tsx",["205"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport updateTextContainer from \"../../../methods/updateContent/updateTextContainer\";\nimport TextContainer from \"../../../model/slide/content/TextContainer\";\n\ntype updateTextContainerProps = {\n    presentEditor: Editor, currentTextContainer: TextContainer\n}\n\nexport const UpdateTextContainer = ({ presentEditor, currentTextContainer }: updateTextContainerProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingTextContainer = (textContainer: TextContainer) => dispatch(addState(updateTextContainer(presentEditor, textContainer)));\n\n    const handleWidthChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        width: +event.target.value\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        position: {\n            ...currentTextContainer.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        position: {\n            ...currentTextContainer.position,\n            y: +event.target.value\n        }\n    });\n    const handleRichTextColorChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            color: event.target.value\n        }\n    });\n    const handleRichTextFontChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            font: event.target.value\n        }\n    });\n    const handleRichTextValueChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            value: event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_text\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextColorChange} value={currentTextContainer.richText.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Текст</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextValueChange} value={currentTextContainer.richText.value} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleWidthChange} value={currentTextContainer.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Стиль</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextFontChange} value={currentTextContainer.richText.font} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentTextContainer.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentTextContainer.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlideSvg.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateEditorContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateSlidesListContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultPresentation.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/generateUuid.ts",["206","207"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/getIteratedCurrSlideContentList.ts",[],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":13,"column":11,"nodeType":"214","messageId":"215","endLine":13,"endColumn":39},{"ruleId":"216","severity":1,"message":"217","line":24,"column":33,"nodeType":"218","endLine":24,"endColumn":70},{"ruleId":"216","severity":1,"message":"217","line":25,"column":33,"nodeType":"218","endLine":25,"endColumn":70},{"ruleId":"216","severity":1,"message":"217","line":26,"column":33,"nodeType":"218","endLine":26,"endColumn":70},{"ruleId":"216","severity":1,"message":"217","line":27,"column":33,"nodeType":"218","endLine":27,"endColumn":70},{"ruleId":"208","replacedBy":"219"},{"ruleId":"210","replacedBy":"220"},{"ruleId":"221","severity":2,"message":"222","line":21,"column":16,"nodeType":"214","endLine":21,"endColumn":27},{"ruleId":"216","severity":1,"message":"217","line":90,"column":21,"nodeType":"218","endLine":90,"endColumn":51},{"ruleId":"223","severity":1,"message":"224","line":27,"column":25,"nodeType":"218","endLine":27,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":27,"column":25,"nodeType":"218","endLine":27,"endColumn":59},{"ruleId":"216","severity":1,"message":"217","line":10,"column":21,"nodeType":"218","endLine":10,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":11,"column":21,"nodeType":"218","endLine":11,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":12,"column":21,"nodeType":"218","endLine":12,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":104,"column":21,"nodeType":"218","endLine":104,"endColumn":51},{"ruleId":"216","severity":1,"message":"217","line":82,"column":21,"nodeType":"218","endLine":82,"endColumn":51},{"ruleId":"225","severity":1,"message":"226","line":3,"column":64,"nodeType":"227","messageId":"228","endLine":3,"endColumn":65},{"ruleId":"225","severity":1,"message":"226","line":3,"column":70,"nodeType":"227","messageId":"228","endLine":3,"endColumn":71},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"@typescript-eslint/no-unused-vars","'updateStateUpdatingRectangle' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["229"],["230"],"react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"changeCurrentContentAction\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-mixed-operators","Unexpected mix of '&' and '|'.","BinaryExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]