[{"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/index.tsx":"1","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/App.tsx":"2","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/index.ts":"3","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/index.tsx":"4","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createControlElements.tsx":"5","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/editor/index.ts":"6","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/index.tsx":"7","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createCircle.tsx":"8","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createRectangle.tsx":"9","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createTextContainer.tsx":"10","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getDefaultEditor.ts":"11","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isRectangle.ts":"12","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isCircle.ts":"13","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isTextContainer.ts":"14","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentContent.ts":"15","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createCircle.ts":"16","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createRectangle.ts":"17","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createTextContainer.ts":"18","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/circle.tsx":"19","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/rectangles.tsx":"20","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/textContainers.tsx":"21","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultTextContainer.ts":"22","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/ContentType.ts":"23","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/BorderType.ts":"24","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateControlElements.tsx":"25","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateCircle.tsx":"26","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateCircle.ts":"27","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createSlide.ts":"28","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlide.ts":"29","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/index.tsx":"30","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateRectangle.tsx":"31","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateTextContainer.tsx":"32","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateRectangle.ts":"33","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateTextContainer.ts":"34","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlideSvg.ts":"35","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateContent.ts":"36","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultCircle.ts":"37","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultRectangle.ts":"38","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateEditorContent.ts":"39","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateSlidesListContent.ts":"40","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultPresentation.ts":"41","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultSlide.ts":"42","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/generateUuid.ts":"43","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/getIteratedCurrSlideContentList.ts":"44","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlide.tsx":"45","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/addSlide.tsx":"46","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlidesList.tsx":"47","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/workingSpace.tsx":"48","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/index.tsx":"49","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previews.tsx":"50","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/logo.tsx":"51","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/toolsPanel.tsx":"52"},{"size":141,"mtime":1609588614454,"results":"53","hashOfConfig":"54"},{"size":504,"mtime":1609966758576,"results":"55","hashOfConfig":"54"},{"size":200,"mtime":1609578811686,"results":"56","hashOfConfig":"54"},{"size":240,"mtime":1609970048990,"results":"57","hashOfConfig":"54"},{"size":435,"mtime":1609787941717,"results":"58","hashOfConfig":"54"},{"size":2092,"mtime":1609834271038,"results":"59","hashOfConfig":"54"},{"size":2025,"mtime":1609968135245,"results":"60","hashOfConfig":"54"},{"size":711,"mtime":1609795903585,"results":"61","hashOfConfig":"54"},{"size":735,"mtime":1609796107040,"results":"62","hashOfConfig":"54"},{"size":755,"mtime":1609795903584,"results":"63","hashOfConfig":"54"},{"size":364,"mtime":1609963931794,"results":"64","hashOfConfig":"54"},{"size":232,"mtime":1609578811649,"results":"65","hashOfConfig":"54"},{"size":215,"mtime":1609578811583,"results":"66","hashOfConfig":"54"},{"size":246,"mtime":1609578811610,"results":"67","hashOfConfig":"54"},{"size":452,"mtime":1609963931609,"results":"68","hashOfConfig":"54"},{"size":433,"mtime":1609963931772,"results":"69","hashOfConfig":"54"},{"size":448,"mtime":1609963931917,"results":"70","hashOfConfig":"54"},{"size":469,"mtime":1609963931643,"results":"71","hashOfConfig":"54"},{"size":460,"mtime":1609965760326,"results":"72","hashOfConfig":"54"},{"size":564,"mtime":1609965760341,"results":"73","hashOfConfig":"54"},{"size":467,"mtime":1609965760335,"results":"74","hashOfConfig":"54"},{"size":448,"mtime":1609963931707,"results":"75","hashOfConfig":"54"},{"size":111,"mtime":1609578811568,"results":"76","hashOfConfig":"54"},{"size":61,"mtime":1609578811589,"results":"77","hashOfConfig":"54"},{"size":1508,"mtime":1609963931901,"results":"78","hashOfConfig":"54"},{"size":4283,"mtime":1609831432754,"results":"79","hashOfConfig":"54"},{"size":428,"mtime":1609963931897,"results":"80","hashOfConfig":"54"},{"size":811,"mtime":1609964246748,"results":"81","hashOfConfig":"54"},{"size":283,"mtime":1609963931614,"results":"82","hashOfConfig":"54"},{"size":515,"mtime":1609920264409,"results":"83","hashOfConfig":"54"},{"size":5088,"mtime":1609831432754,"results":"84","hashOfConfig":"54"},{"size":4087,"mtime":1609831432755,"results":"85","hashOfConfig":"54"},{"size":448,"mtime":1609963931755,"results":"86","hashOfConfig":"54"},{"size":476,"mtime":1609963931777,"results":"87","hashOfConfig":"54"},{"size":331,"mtime":1609963931649,"results":"88","hashOfConfig":"54"},{"size":608,"mtime":1609963931632,"results":"89","hashOfConfig":"54"},{"size":549,"mtime":1609963931606,"results":"90","hashOfConfig":"54"},{"size":626,"mtime":1609963931660,"results":"91","hashOfConfig":"54"},{"size":616,"mtime":1609963931667,"results":"92","hashOfConfig":"54"},{"size":642,"mtime":1609963931921,"results":"93","hashOfConfig":"54"},{"size":274,"mtime":1609961461695,"results":"94","hashOfConfig":"54"},{"size":258,"mtime":1609963931691,"results":"95","hashOfConfig":"54"},{"size":254,"mtime":1609786909917,"results":"96","hashOfConfig":"54"},{"size":449,"mtime":1609966129349,"results":"97","hashOfConfig":"54"},{"size":498,"mtime":1609968135240,"results":"98","hashOfConfig":"54"},{"size":557,"mtime":1609970048959,"results":"99","hashOfConfig":"54"},{"size":850,"mtime":1609970048953,"results":"100","hashOfConfig":"54"},{"size":335,"mtime":1609970048950,"results":"101","hashOfConfig":"54"},{"size":244,"mtime":1609970120793,"results":"102","hashOfConfig":"54"},{"size":613,"mtime":1609970048964,"results":"103","hashOfConfig":"54"},{"size":137,"mtime":1609970049010,"results":"104","hashOfConfig":"54"},{"size":1206,"mtime":1609970120779,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"nvgrty",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/index.tsx",[],["217","218"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/App.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/index.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/index.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createControlElements.tsx",[],["219","220"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/editor/index.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/index.tsx",["221"],"import * as React from \"react\";\nimport {Circle} from './circle'\nimport {RootState} from \"../../../store/Reducer\";\nimport Content from \"../../../model/slide/content/Content\";\nimport {isCircle} from \"../../../methods/typeGuardMethods/isCircle\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addState} from \"../../../store/Reducer/editor\";\nimport Editor from \"../../../model/Editor\";\nimport {isRectangle} from \"../../../methods/typeGuardMethods/isRectangle\";\nimport {Rectangle} from \"./rectangles\";\nimport {isTextContainer} from \"../../../methods/typeGuardMethods/isTextContainer\";\nimport {TextContainer} from \"./textContainers\";\nimport changeCurrentContent from \"../../../methods/updateContent/changeCurrentContent\";\nimport {getIteratedCurrSlideContentList} from \"../../../methods/core/getIteratedCurrSlideContentList\";\n\nexport const Contents: React.FC = () => {\n    const editor: Editor = useSelector((state: RootState) => state.editorReducer.present);\n    const changeCurrentContentAction = (uuid: string): object => {\n        return useDispatch()(addState(changeCurrentContent(editor, uuid)));\n    };\n\n    const drawContent = (content: Content) => {\n        const onClickCallback = () => changeCurrentContentAction(content.uuid);\n        if (isCircle(content)) {\n            return <Circle circle={content} onClick={onClickCallback.bind(content)} isCurrent={true}\n                           key={content.uuid}/>\n        }\n        if (isRectangle(content)) {\n            return <Rectangle rectangle={content} isCurrent={true} key={content.uuid}\n                              onClick={onClickCallback.bind(content)}/>\n        }\n        if (isTextContainer(content)) {\n            return <TextContainer textContainer={content} isCurrent={true} onClick={onClickCallback.bind(content)}/>\n        }\n    };\n\n    return (\n        <svg width={1000} height=\"75vh\" id={\"currentSlideContent\"}>\n            {getIteratedCurrSlideContentList(editor).map(drawContent)}\n        </svg>\n    );\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createCircle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createRectangle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createTextContainer.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getDefaultEditor.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/circle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/rectangles.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/textContainers.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/ContentType.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/BorderType.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateControlElements.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateCircle.tsx",["222"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport updateCircle from \"../../../methods/updateContent/updateCircle\";\nimport Circle from \"../../../model/slide/content/shape/Circle\";\n\ntype updateCircleProps = {\n    presentEditor: Editor, currentCircle: Circle\n}\n\nexport const UpdateCircle = ({ presentEditor, currentCircle }: updateCircleProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingCircle = (circle: Circle) => dispatch(addState(updateCircle(presentEditor, circle)));\n\n    const handleRadiusChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        radius: +event.target.value\n    });\n    const handleBorderWidthChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            width: +event.target.value\n        }\n    });\n    const handleBorderColorChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            color: event.target.value\n        }\n    });\n    const handleBorderTypeChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            type: event.target.value\n        }\n    });\n    const handleBackgroundChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        background: event.target.value\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        position: {\n            ...currentCircle.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        position: {\n            ...currentCircle.position,\n            y: +event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_circle\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Радиус</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRadiusChange} value={currentCircle.radius} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderWidthChange} value={currentCircle.border.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderColorChange} value={currentCircle.border.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Тип обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderTypeChange} value={currentCircle.border.type} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Фон</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBackgroundChange} value={currentCircle.background} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentCircle.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentCircle.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/index.tsx",["223","224","225"],"import {Component} from \"react\";\nimport {CreateCircle} from './createCircle'\nimport {CreateRectangle} from './createRectangle'\nimport {CreateTextContainer} from './createTextContainer'\n\nexport class Control extends Component {\n    render() {\n        return (\n            <ul className=\"dropdown\">\n                <li><a href=\"#\"><CreateRectangle/></a></li>\n                <li><a href=\"#\"><CreateCircle/></a></li>\n                <li><a href=\"#\"><CreateTextContainer/></a></li>\n            </ul>\n        );\n    }\n}\n","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateRectangle.tsx",["226"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport Rectangle from \"../../../model/slide/content/shape/Rectangle\";\nimport updateRectangle from \"../../../methods/updateContent/updateRectangle\";\n\ntype updateRectangleProps = {\n    presentEditor: Editor, currentRectangle: Rectangle\n}\n\nexport const UpdateRectangle = ({ presentEditor, currentRectangle }: updateRectangleProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingRectangle = (rectangle: Rectangle) => dispatch(addState(updateRectangle(presentEditor, rectangle)));\n\n    const handleBackgroundChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        background: event.target.value\n    });\n    const handleBorderWidthChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            width: +event.target.value\n        }\n    });\n    const handleBorderColorChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            color: event.target.value\n        }\n    });\n    const handleBorderTypeChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            type: event.target.value\n        }\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        position: {\n            ...currentRectangle.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        position: {\n            ...currentRectangle.position,\n            y: +event.target.value\n        }\n    });\n    const handleRectangleSizeHeightChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        rectangleSize: {\n            ...currentRectangle.rectangleSize,\n            height: +event.target.value\n        }\n    });\n    const handleRectangleSizeWidthChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        rectangleSize: {\n            ...currentRectangle.rectangleSize,\n            width: +event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_rect\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRectangleSizeWidthChange} value={currentRectangle.rectangleSize.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Высота</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRectangleSizeHeightChange} value={currentRectangle.rectangleSize.height} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Фон</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBackgroundChange} value={currentRectangle.background} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderWidthChange} value={currentRectangle.border.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderColorChange} value={currentRectangle.border.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Тип обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderTypeChange} value={currentRectangle.border.type} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentRectangle.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentRectangle.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateTextContainer.tsx",["227"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport updateTextContainer from \"../../../methods/updateContent/updateTextContainer\";\nimport TextContainer from \"../../../model/slide/content/TextContainer\";\n\ntype updateTextContainerProps = {\n    presentEditor: Editor, currentTextContainer: TextContainer\n}\n\nexport const UpdateTextContainer = ({ presentEditor, currentTextContainer }: updateTextContainerProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingTextContainer = (textContainer: TextContainer) => dispatch(addState(updateTextContainer(presentEditor, textContainer)));\n\n    const handleWidthChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        width: +event.target.value\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        position: {\n            ...currentTextContainer.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        position: {\n            ...currentTextContainer.position,\n            y: +event.target.value\n        }\n    });\n    const handleRichTextColorChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            color: event.target.value\n        }\n    });\n    const handleRichTextFontChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            font: event.target.value\n        }\n    });\n    const handleRichTextValueChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            value: event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_text\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextColorChange} value={currentTextContainer.richText.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Текст</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextValueChange} value={currentTextContainer.richText.value} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleWidthChange} value={currentTextContainer.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Стиль</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextFontChange} value={currentTextContainer.richText.font} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentTextContainer.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentTextContainer.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlideSvg.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateEditorContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateSlidesListContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultPresentation.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/generateUuid.ts",["228","229"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/getIteratedCurrSlideContentList.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlide.tsx",["230","231"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/addSlide.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlidesList.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/workingSpace.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/index.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previews.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/logo.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/toolsPanel.tsx",["232","233","234","235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"236","replacedBy":"240"},{"ruleId":"238","replacedBy":"241"},{"ruleId":"242","severity":2,"message":"243","line":21,"column":16,"nodeType":"244","endLine":21,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":90,"column":21,"nodeType":"247","endLine":90,"endColumn":51},{"ruleId":"245","severity":1,"message":"246","line":10,"column":21,"nodeType":"247","endLine":10,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":11,"column":21,"nodeType":"247","endLine":11,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":12,"column":21,"nodeType":"247","endLine":12,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":104,"column":21,"nodeType":"247","endLine":104,"endColumn":51},{"ruleId":"245","severity":1,"message":"246","line":82,"column":21,"nodeType":"247","endLine":82,"endColumn":51},{"ruleId":"248","severity":1,"message":"249","line":3,"column":64,"nodeType":"250","messageId":"251","endLine":3,"endColumn":65},{"ruleId":"248","severity":1,"message":"249","line":3,"column":70,"nodeType":"250","messageId":"251","endLine":3,"endColumn":71},{"ruleId":"252","severity":1,"message":"253","line":15,"column":13,"nodeType":"247","endLine":15,"endColumn":47},{"ruleId":"245","severity":1,"message":"246","line":15,"column":13,"nodeType":"247","endLine":15,"endColumn":47},{"ruleId":"245","severity":1,"message":"246","line":14,"column":21,"nodeType":"247","endLine":14,"endColumn":58},{"ruleId":"245","severity":1,"message":"246","line":15,"column":21,"nodeType":"247","endLine":15,"endColumn":96},{"ruleId":"245","severity":1,"message":"246","line":16,"column":21,"nodeType":"247","endLine":16,"endColumn":96},{"ruleId":"245","severity":1,"message":"246","line":17,"column":21,"nodeType":"247","endLine":17,"endColumn":58},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],["254"],["255"],"react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"changeCurrentContentAction\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&' and '|'.","BinaryExpression","unexpectedMixedOperator","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]