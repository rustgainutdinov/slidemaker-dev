[{"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/index.tsx":"1","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/App.tsx":"2","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/index.ts":"3","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/index.tsx":"4","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createControlElements.tsx":"5","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/editor/index.ts":"6","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/index.tsx":"7","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createCircle.tsx":"8","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createRectangle.tsx":"9","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createTextContainer.tsx":"10","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getDefaultEditor.ts":"11","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isRectangle.ts":"12","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isCircle.ts":"13","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isTextContainer.ts":"14","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentContent.ts":"15","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createCircle.ts":"16","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createRectangle.ts":"17","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createTextContainer.ts":"18","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/circle.tsx":"19","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/rectangles.tsx":"20","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/textContainers.tsx":"21","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultTextContainer.ts":"22","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/ContentType.ts":"23","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/BorderType.ts":"24","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateControlElements.tsx":"25","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateCircle.tsx":"26","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateCircle.ts":"27","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createSlide.ts":"28","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlide.ts":"29","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/index.tsx":"30","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateRectangle.tsx":"31","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateTextContainer.tsx":"32","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateRectangle.ts":"33","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateTextContainer.ts":"34","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlideSvg.ts":"35","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateContent.ts":"36","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultCircle.ts":"37","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultRectangle.ts":"38","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateEditorContent.ts":"39","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateSlidesListContent.ts":"40","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultPresentation.ts":"41","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultSlide.ts":"42","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/generateUuid.ts":"43","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/getIteratedCurrSlideContentList.ts":"44","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlide.tsx":"45","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/addSlide.tsx":"46","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlidesList.tsx":"47","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/workingSpace.tsx":"48","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/index.tsx":"49","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previews.tsx":"50","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/logo.tsx":"51","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/toolsPanel.tsx":"52","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isImage.ts":"53","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createImage.tsx":"54","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateImage.tsx":"55","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateImage.ts":"56","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createImage.ts":"57","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultImage.ts":"58","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/image.tsx":"59"},{"size":141,"mtime":1609588614454,"results":"60","hashOfConfig":"61"},{"size":504,"mtime":1609966758576,"results":"62","hashOfConfig":"61"},{"size":200,"mtime":1609578811686,"results":"63","hashOfConfig":"61"},{"size":240,"mtime":1609970048990,"results":"64","hashOfConfig":"61"},{"size":435,"mtime":1609787941717,"results":"65","hashOfConfig":"61"},{"size":2092,"mtime":1609834271038,"results":"66","hashOfConfig":"61"},{"size":2351,"mtime":1609976151706,"results":"67","hashOfConfig":"61"},{"size":711,"mtime":1609795903585,"results":"68","hashOfConfig":"61"},{"size":735,"mtime":1609796107040,"results":"69","hashOfConfig":"61"},{"size":755,"mtime":1609795903584,"results":"70","hashOfConfig":"61"},{"size":364,"mtime":1609963931794,"results":"71","hashOfConfig":"61"},{"size":232,"mtime":1609578811649,"results":"72","hashOfConfig":"61"},{"size":215,"mtime":1609578811583,"results":"73","hashOfConfig":"61"},{"size":246,"mtime":1609578811610,"results":"74","hashOfConfig":"61"},{"size":452,"mtime":1609963931609,"results":"75","hashOfConfig":"61"},{"size":433,"mtime":1609963931772,"results":"76","hashOfConfig":"61"},{"size":448,"mtime":1609963931917,"results":"77","hashOfConfig":"61"},{"size":469,"mtime":1609963931643,"results":"78","hashOfConfig":"61"},{"size":1589,"mtime":1609980667225,"results":"79","hashOfConfig":"61"},{"size":566,"mtime":1609970779901,"results":"80","hashOfConfig":"61"},{"size":858,"mtime":1609976352562,"results":"81","hashOfConfig":"61"},{"size":529,"mtime":1609970779909,"results":"82","hashOfConfig":"61"},{"size":122,"mtime":1609970779908,"results":"83","hashOfConfig":"61"},{"size":61,"mtime":1609578811589,"results":"84","hashOfConfig":"61"},{"size":1751,"mtime":1609970779906,"results":"85","hashOfConfig":"61"},{"size":4283,"mtime":1609831432754,"results":"86","hashOfConfig":"61"},{"size":428,"mtime":1609963931897,"results":"87","hashOfConfig":"61"},{"size":811,"mtime":1609964246748,"results":"88","hashOfConfig":"61"},{"size":283,"mtime":1609963931614,"results":"89","hashOfConfig":"61"},{"size":613,"mtime":1609970779906,"results":"90","hashOfConfig":"61"},{"size":5088,"mtime":1609831432754,"results":"91","hashOfConfig":"61"},{"size":5806,"mtime":1609970779908,"results":"92","hashOfConfig":"61"},{"size":448,"mtime":1609963931755,"results":"93","hashOfConfig":"61"},{"size":476,"mtime":1609963931777,"results":"94","hashOfConfig":"61"},{"size":331,"mtime":1609963931649,"results":"95","hashOfConfig":"61"},{"size":608,"mtime":1609963931632,"results":"96","hashOfConfig":"61"},{"size":549,"mtime":1609963931606,"results":"97","hashOfConfig":"61"},{"size":626,"mtime":1609963931660,"results":"98","hashOfConfig":"61"},{"size":616,"mtime":1609963931667,"results":"99","hashOfConfig":"61"},{"size":642,"mtime":1609963931921,"results":"100","hashOfConfig":"61"},{"size":274,"mtime":1609961461695,"results":"101","hashOfConfig":"61"},{"size":258,"mtime":1609963931691,"results":"102","hashOfConfig":"61"},{"size":254,"mtime":1609786909917,"results":"103","hashOfConfig":"61"},{"size":449,"mtime":1609966129349,"results":"104","hashOfConfig":"61"},{"size":498,"mtime":1609968135240,"results":"105","hashOfConfig":"61"},{"size":525,"mtime":1609970975570,"results":"106","hashOfConfig":"61"},{"size":870,"mtime":1609976103213,"results":"107","hashOfConfig":"61"},{"size":335,"mtime":1609970048950,"results":"108","hashOfConfig":"61"},{"size":244,"mtime":1609970120793,"results":"109","hashOfConfig":"61"},{"size":613,"mtime":1609970048964,"results":"110","hashOfConfig":"61"},{"size":137,"mtime":1609970049010,"results":"111","hashOfConfig":"61"},{"size":1206,"mtime":1609970120779,"results":"112","hashOfConfig":"61"},{"size":206,"mtime":1609970779910,"results":"113","hashOfConfig":"61"},{"size":682,"mtime":1609970779904,"results":"114","hashOfConfig":"61"},{"size":3263,"mtime":1609970779908,"results":"115","hashOfConfig":"61"},{"size":422,"mtime":1609970779910,"results":"116","hashOfConfig":"61"},{"size":432,"mtime":1609970779909,"results":"117","hashOfConfig":"61"},{"size":439,"mtime":1609970779909,"results":"118","hashOfConfig":"61"},{"size":385,"mtime":1609970779901,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"nvgrty",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/index.tsx",[],["249","250"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/App.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/index.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/index.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createControlElements.tsx",[],["251","252"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/store/Reducer/editor/index.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/index.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createCircle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createRectangle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createTextContainer.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getDefaultEditor.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/circle.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/rectangles.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/textContainers.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/ContentType.ts",[],["253","254"],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/const/BorderType.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateControlElements.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateCircle.tsx",["255"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport updateCircle from \"../../../methods/updateContent/updateCircle\";\nimport Circle from \"../../../model/slide/content/shape/Circle\";\n\ntype updateCircleProps = {\n    presentEditor: Editor, currentCircle: Circle\n}\n\nexport const UpdateCircle = ({ presentEditor, currentCircle }: updateCircleProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingCircle = (circle: Circle) => dispatch(addState(updateCircle(presentEditor, circle)));\n\n    const handleRadiusChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        radius: +event.target.value\n    });\n    const handleBorderWidthChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            width: +event.target.value\n        }\n    });\n    const handleBorderColorChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            color: event.target.value\n        }\n    });\n    const handleBorderTypeChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        border: {\n            ...currentCircle.border,\n            type: event.target.value\n        }\n    });\n    const handleBackgroundChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        background: event.target.value\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        position: {\n            ...currentCircle.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingCircle({\n        ...currentCircle,\n        position: {\n            ...currentCircle.position,\n            y: +event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_circle\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Радиус</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRadiusChange} value={currentCircle.radius} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderWidthChange} value={currentCircle.border.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderColorChange} value={currentCircle.border.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Тип обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderTypeChange} value={currentCircle.border.type} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Фон</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBackgroundChange} value={currentCircle.background} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentCircle.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentCircle.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/index.tsx",["256","257","258"],"import {Component} from \"react\";\nimport {CreateCircle} from './createCircle'\nimport {CreateRectangle} from './createRectangle'\nimport {CreateTextContainer} from './createTextContainer'\n\nexport class Control extends Component {\n    render() {\n        return (\n            <ul className=\"dropdown\">\n                <li><a href=\"#\"><CreateRectangle/></a></li>\n                <li><a href=\"#\"><CreateCircle/></a></li>\n                <li><a href=\"#\"><CreateTextContainer/></a></li>\n            </ul>\n        );\n    }\n}\n","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateRectangle.tsx",["259"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport Rectangle from \"../../../model/slide/content/shape/Rectangle\";\nimport updateRectangle from \"../../../methods/updateContent/updateRectangle\";\n\ntype updateRectangleProps = {\n    presentEditor: Editor, currentRectangle: Rectangle\n}\n\nexport const UpdateRectangle = ({ presentEditor, currentRectangle }: updateRectangleProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingRectangle = (rectangle: Rectangle) => dispatch(addState(updateRectangle(presentEditor, rectangle)));\n\n    const handleBackgroundChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        background: event.target.value\n    });\n    const handleBorderWidthChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            width: +event.target.value\n        }\n    });\n    const handleBorderColorChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            color: event.target.value\n        }\n    });\n    const handleBorderTypeChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        border: {\n            ...currentRectangle.border,\n            type: event.target.value\n        }\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        position: {\n            ...currentRectangle.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        position: {\n            ...currentRectangle.position,\n            y: +event.target.value\n        }\n    });\n    const handleRectangleSizeHeightChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        rectangleSize: {\n            ...currentRectangle.rectangleSize,\n            height: +event.target.value\n        }\n    });\n    const handleRectangleSizeWidthChange = (event: any) => updateStateUpdatingRectangle({\n        ...currentRectangle,\n        rectangleSize: {\n            ...currentRectangle.rectangleSize,\n            width: +event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_rect\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRectangleSizeWidthChange} value={currentRectangle.rectangleSize.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Высота</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRectangleSizeHeightChange} value={currentRectangle.rectangleSize.height} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Фон</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBackgroundChange} value={currentRectangle.background} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderWidthChange} value={currentRectangle.border.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderColorChange} value={currentRectangle.border.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Тип обводки</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleBorderTypeChange} value={currentRectangle.border.type} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentRectangle.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentRectangle.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateTextContainer.tsx",["260"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport updateTextContainer from \"../../../methods/updateContent/updateTextContainer\";\nimport TextContainer from \"../../../model/slide/content/TextContainer\";\n\ntype updateTextContainerProps = {\n    presentEditor: Editor, currentTextContainer: TextContainer\n}\n\nexport const UpdateTextContainer = ({ presentEditor, currentTextContainer }: updateTextContainerProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingTextContainer = (textContainer: TextContainer) => dispatch(addState(updateTextContainer(presentEditor, textContainer)));\n\n    const handleWidthChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        width: +event.target.value\n    });\n    const handlePositionXChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        position: {\n            ...currentTextContainer.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        position: {\n            ...currentTextContainer.position,\n            y: +event.target.value\n        }\n    });\n    const handleRichTextColorChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            color: event.target.value\n        }\n    });\n    const handleRichTextFontChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            font: event.target.value\n        }\n    });\n    const handleRichTextValueChange = (event: any) => updateStateUpdatingTextContainer({\n        ...currentTextContainer,\n        richText: {\n            ...currentTextContainer.richText,\n            value: event.target.value\n        }\n    });\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_text\">\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Цвет</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextColorChange} value={currentTextContainer.richText.color} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Текст</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextValueChange} value={currentTextContainer.richText.value} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleWidthChange} value={currentTextContainer.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Стиль</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleRichTextFontChange} value={currentTextContainer.richText.font} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentTextContainer.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentTextContainer.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateTextContainer.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/changeCurrentSlideSvg.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultCircle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultRectangle.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateEditorContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/updateSlidesListContent.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultPresentation.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultSlide.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/generateUuid.ts",["261","262"],"function generateUuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport default generateUuid","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/core/getIteratedCurrSlideContentList.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlide.tsx",["263","264"],"import {Slide} from \"../../../model/slide/Slide\";\n\ntype PreviewSlideProps = {\n    slide: Slide,\n    onClick: () => void\n}\n\nexport const PreviewSlide = ({slide, onClick}: PreviewSlideProps) => {\n    return (\n        <div className=\"slide_wrapper\" onClick={onClick}\n             key={slide.slideId}>\n            <div className=\"slide_counter\">\n                <p className=\"counter\">{slide.slideId + 1}</p>\n            </div>\n            <a href=\"#\" className=\"slide_box\"></a>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/addSlide.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previewSlidesList.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/workingSpace.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/index.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/previews/previews.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/logo.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/menu/toolsPanel.tsx",["265","266","267","268"],"import {Control} from \"../control\";\nimport {UpdateControlElements} from \"../control/updateControlElements\";\nimport React from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {redoState, undoState} from \"../../../store/Reducer/editor\";\n\nexport const ToolsPanel = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"tools_panel\">\n            <h1 className=\"title\">Самая лучшая презентация</h1>\n            <div className=\"tools\">\n                <li><a href=\"#\" className=\"tools_button\">Файл</a></li>\n                <li><a href=\"#\" className=\"tools_button\" onClick={() => dispatch(undoState())}>UNDO</a></li>\n                <li><a href=\"#\" className=\"tools_button\" onClick={() => dispatch(redoState())}>REDO</a></li>\n                <li><a href=\"#\" className=\"tools_button\">Вставка</a>\n                    <ul className=\"dropdown\">\n                        <Control/>\n                    </ul>\n                </li>\n                <li>\n                    <a href=\"#edit_params\" className=\"tools_button\">Изменить</a>\n                    <UpdateControlElements/>\n                </li>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/typeGuardMethods/isImage.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/createImage.tsx",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/control/updateImage.tsx",["269"],"import { useDispatch } from \"react-redux\";\nimport Editor from \"../../../model/Editor\";\nimport { addState } from \"../../../store/Reducer/editor\";\nimport Image from \"../../../model/slide/content/Image\";\nimport updateImage from \"../../../methods/updateContent/updateImage\";\n\ntype updateImageProps = {\n    presentEditor: Editor, currentImage: Image\n}\n\nexport const UpdateImage = ({ presentEditor, currentImage }: updateImageProps) => {\n    const dispatch = useDispatch();\n    const updateStateUpdatingImage = (image: Image) => dispatch(addState(updateImage(presentEditor, image)));\n\n    const handlePositionXChange = (event: any) => updateStateUpdatingImage({\n        ...currentImage,\n        position: {\n            ...currentImage.position,\n            x: +event.target.value\n        }\n    });\n    const handlePositionYChange = (event: any) => updateStateUpdatingImage({\n        ...currentImage,\n        position: {\n            ...currentImage.position,\n            y: +event.target.value\n        }\n    });\n    const handleImageSizeHeightChange = (event: any) => updateStateUpdatingImage({\n        ...currentImage,\n        size: {\n            ...currentImage.size,\n            height: +event.target.value\n        }\n    });\n    const handleImageSizeWidthChange = (event: any) => updateStateUpdatingImage({\n        ...currentImage,\n        size: {\n            ...currentImage.size,\n            width: +event.target.value\n        }\n    });\n    const handleImageUrlChange = (event: any) => updateStateUpdatingImage({\n        ...currentImage,\n        url: event.target.value\n    });\n\n    return (\n        <div>\n            <div id=\"edit_params\">\n                <div id=\"popup_rect\">\n                <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ссылка</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleImageUrlChange} value={currentImage.url} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Ширина</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleImageSizeWidthChange} value={currentImage.size.width} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Высота</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handleImageSizeHeightChange} value={currentImage.size.height} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция X</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionXChange} value={currentImage.position.x} />\n                    </div>\n                    <div className=\"params_field\">\n                        <h3 className=\"param_name\">Позиция Y</h3>\n                        <input type=\"text\" className=\"param_input_label\" onChange={handlePositionYChange} value={currentImage.position.y} />\n                    </div>\n                    <a href=\"#\" className=\"close\">Применить</a>\n                </div>\n            </div>\n        </div>\n    )\n};","/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/updateContent/updateImage.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/createImage.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/methods/addContent/getParamsOfContent/getDefaultImage.ts",[],"/Users/rustamgajnutdinov/Documents/work/projects/slidemaker/slidemaker-dev/src/components/Editor/contents/image.tsx",[],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"270","replacedBy":"274"},{"ruleId":"272","replacedBy":"275"},{"ruleId":"270","replacedBy":"276"},{"ruleId":"272","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":90,"column":21,"nodeType":"280","endLine":90,"endColumn":51},{"ruleId":"278","severity":1,"message":"279","line":10,"column":21,"nodeType":"280","endLine":10,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":11,"column":21,"nodeType":"280","endLine":11,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":12,"column":21,"nodeType":"280","endLine":12,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":104,"column":21,"nodeType":"280","endLine":104,"endColumn":51},{"ruleId":"278","severity":1,"message":"279","line":82,"column":21,"nodeType":"280","endLine":82,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":3,"column":64,"nodeType":"283","messageId":"284","endLine":3,"endColumn":65},{"ruleId":"281","severity":1,"message":"282","line":3,"column":70,"nodeType":"283","messageId":"284","endLine":3,"endColumn":71},{"ruleId":"285","severity":1,"message":"286","line":15,"column":13,"nodeType":"280","endLine":15,"endColumn":47},{"ruleId":"278","severity":1,"message":"279","line":15,"column":13,"nodeType":"280","endLine":15,"endColumn":47},{"ruleId":"278","severity":1,"message":"279","line":14,"column":21,"nodeType":"280","endLine":14,"endColumn":58},{"ruleId":"278","severity":1,"message":"279","line":15,"column":21,"nodeType":"280","endLine":15,"endColumn":96},{"ruleId":"278","severity":1,"message":"279","line":16,"column":21,"nodeType":"280","endLine":16,"endColumn":96},{"ruleId":"278","severity":1,"message":"279","line":17,"column":21,"nodeType":"280","endLine":17,"endColumn":58},{"ruleId":"278","severity":1,"message":"279","line":72,"column":21,"nodeType":"280","endLine":72,"endColumn":51},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],["287"],["288"],["287"],["288"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&' and '|'.","BinaryExpression","unexpectedMixedOperator","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]